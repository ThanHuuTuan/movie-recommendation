version: '3'

volumes:
  mgdata:
  static_files:
  uploaded_files:
  redisdata:

services:
  web:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./src:/src
    depends_on:
      - db
      - rabbitmq
      - redis
    links:
      - db:mongodbhost
      - redis
      - rabbitmq
    container_name: recsys_web_1
    restart: on-failure
    
  db:
    image: mongo:4.0.4
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    ports:
      - "27017:27017"
    expose:
      - "27017"
    # command: mongod --auth --bind_ip all
    # command: mongod --port 27017 --bind_ip 0.0.0.0
    volumes:
      - mgdata:/var/lib/mongodb/data/
    container_name: recsys_db_1
    restart: on-failure
  
  nginx:
    container_name: nginx:1.18.0-alpine
    build:
      context: .
      dockerfile: ./dockerfiles/nginx/Dockerfile
    ports:
      - "8000:8000"
    expose:
      - "8000"
    volumes:
      - static_files:/static_files
      - uploaded_files:/uploaded_files
    depends_on:
      - web
    container_name: recsys_nginx_1
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3.8.3-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    ports:
      - "15672:15672"
      - "5672:5672"
    hostname: rabbitmq
    container_name: recsys_rmq_1
    restart: on-failure

  redis:
    image: redis:5.0.9-alpine
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - redisdata:/data
    hostname: redis
    container_name: recsys_redis_1
    restart: on-failure

  celery_worker:
    build:
      context: .
      dockerfile: ./dockerfiles/web/Dockerfile
    command: celery -A worker worker --loglevel=info
    links:
      - rabbitmq
      - redis
    depends_on:
      - rabbitmq
      - redis
    volumes:
    - ./src:/src
    container_name: recsys_celery_1
    restart: on-failure